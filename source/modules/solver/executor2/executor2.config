{
 "Configuration Settings": 
 [
   {
    "Name": [ "Executions Per Generation" ],
    "Type": "size_t",
    "Description": "Specifies the number of model executions per generation. By default this setting is 0, meaning that all executions will be performed in the first generation. For values greater 0, executions will be split into batches and split int generations for intermediate output."
   },
   {
    "Name": [ "Function To Execute" ],
    "Type": "std::string",
    "Description": "Specifies the method of the problem that should be executed."
   },
   {
    "Name": [ "Test Function" ],
    "Type": "std::function<void(korali::Sample&)>",
     "Description": "UNTESTED. This function, if set, is called on each sample after the function evaluation. It can access all the same parameter values as 'Function To Execute', and additionally the results. Use this to run tests. Limitations: It does not pass the problem and solver object as arguments to the test function, because this breaks compatibility with the Python interface. And it is not evaluated in parallel."
  },
   {
    "Name": [ "Double Parameters" ],
    "Type": "std::map<std::string, double>",
    "Description": "A map containing all parameters of type double that the function should be evaluated with."
   },
   {
    "Name": [ "Vector Parameters" ],
    "Type": "std::map<std::string, std::vector<double>>",
    "Description": "A map containing all parameters of type std::vector<double> that the function should be evaluated with."
   },
   {
    "Name": [ "Vector Of Vectors Parameters" ],
    "Type": "std::map< std::string, std::vector<std::vector<double>> >",
    "Description": "A map containing all parameters of type std::vector<std::vector<double>> that the function should be evaluated with. Keys are the parameter names."
   },
   {
    "Name": [ "Double Result Names" ],
    "Type": "std::vector<std::string>",
    "Description": "List of names of results of type 'double' that will be contained in the sample after execution of the function."
   },
   {
    "Name": [ "Vector Result Names" ],
    "Type": "std::vector<std::string>",
    "Description": "List of names of results of type 'std::vector<double>' that will be contained in the sample after execution of the function."
   },
   {
    "Name": [ "Vector Of Vectors Result Names" ],
    "Type": "std::vector<std::string>",
    "Description": "List of names of results of type 'std::vector<std::vector<double>>' that will be contained in the sample after execution of the function."
   }
 ],
 
 "Results":
 [
 
 ],
 
  "Internal Settings": 
 [
   {
    "Name": [ "Sample Count" ],
    "Type": "size_t",
    "Description": "Number of samples to execute."
   },
   {
    "Name": [ "Double Result Values" ],
    "Type": "std::map<std::string, std::vector<double>>",
    "Description": "Contains the double-type results after each generation."
   },
   {
    "Name": [ "Vector Result Values" ],
    "Type": "std::map<std::string, std::vector<std::vector<double>>>",
    "Description": "Contains the 'std::vector<double>'-type results after each generation."
   },
   {
    "Name": [ "Vector Of Vectors Result Values" ],
    "Type": "std::map<std::string, std::vector<std::vector<std::vector<double>>>>",
    "Description": "Contains the 'std::vector<std::vector<double>>'-type results after each generation."
   }
 ],
 
 "Module Defaults":
 {
   "Executions Per Generation": 500000000,
   "Function To Execute": "Execute",
   "Test Function": 0,
   "Double Parameters": {},
   "Vector Parameters": {},
   "Vector Of Vectors Parameters": {},
   "Double Result Names": [],
   "Vector Result Names": [],
   "Vector Of Vectors Result Names": []
 }
}
