{

 "Configuration Settings":
 [
   {
    "Name": [ "Number Chains" ],
    "Type": "size_t",
    "Description": "How many sampling chains to use, to generate samples for FIM estimation."
   },
   {
    "Name": [ "MCMC Outer Steps" ],
    "Type": "size_t",
    "Description": "For this many iterations, repeat subchain 1 - subchain 2 - subchain 3."
   },
   {
    "Name": [ "MCMC Subchain Steps" ],
    "Type": "std::vector<size_t>",
    "Description": "Must be a vector of length 3, [N1, N2, N3] where each Ni stands for the number of steps to perform each of the three subchains for - each subchain uses a different proposal distribution."
   },
   {
    "Name": [ "MCMC Target Acceptance Rate" ],
    "Type": "double",
    "Description": "MCMC Target Acceptance Rate. Should be larger than 0 and lower than 1."
   },
   {
    "Name": [ "Hyperparameters Mean" ],
    "Type": "std::vector<double>",
    "Default": "std::vector<double>(0)",
    "Description": "Values for the mean of the transformed-normal prior. (For 'Hierarchical' problem classes.) "
   },
   {
    "Name": [ "Hyperparameters Covariance" ],
    "Type": "std::vector<std::vector<double>>",
    "Default": "std::vector<std::vector<double>>(0)",
    "Description": "Values for the covariance matrix of the transformed-normal prior. An NxN matrix represented as list of lists. (For 'Hierarchical' problem classes.)"
   },
   {
    "Name": [ "Hyperparameters Diagonal Covariance" ],
    "Type": "std::vector<double>",
    "Default": "std::vector<double>(0)",
    "Description": "Values for the covariance matrix of the transformed-normal prior, in case it is diagonal. Represented as vector of diagonal values (the variances). (For 'Hierarchical' problem classes.)"
   }
 ],

 "Variables Configuration":
 [
 ],
 
 "Internal Settings":
 [
   {
     "Name": [ "Samples" ],
     "Type": "std::vector<std::vector<std::vector<std::vector<double>>>>",
     "Description": "Edit: Remove this? Sampled values of the latent variables. 'Number Sampling Chains' x (\"MCMC Outer Steps\" * sum(\"MCMC Subchain Steps\") ) x [number individuals] x [latent space dimensions]. vectors with values for all latent variables."
   },
   {
     "Name": [ "Z" ],
     "Type": "std::vector<std::vector<std::vector<std::vector<double>>>>",
     "Description": "All sampled values of the transformed latent variables."
   },
   {
    "Name": [ "Number Individuals" ],
    "Type": "size_t",
     "Description": "For convenience; the same as the parameter of same name of the hierarchical latent problem. How many different latent variable vectors are there. Each latent variable vector is treated as belonging to one 'individual'. All those vectors are assumed to be drawn from the same distribution."
  },
   {
    "Name": [ "Latent Space Dimensions" ],
    "Type": "size_t",
     "Description": "For convenience; the same as the parameter of same name of the hierarchical latent problem."
  },
   {
    "Name": [ "Uniform Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Uniform random number generator."
   },
   {
    "Name": [ "Univariate Normal Generator" ],
    "Type": "korali::distribution::univariate::Normal*",
    "Description": "Normal random number generator."
   },
   {
    "Name": [ "Multivariate Normal Generator" ],
    "Type": "korali::distribution::multivariate::Normal*",
    "Description": "Multivariate normal random number generator."
   },
   {
    "Name": [ "Covariance Cholesky" ],
    "Type": "std::vector<std::vector<double>>",
    "Default": "std::vector<std::vector<double>>(0)",
    "Description": "Cholesky decomposition of the covariance matrix. Only used for estimating the current log likelihood (todo). An NxN matrix encoded as vector of vectors. Lower-triangular; entries above the diagonal are meaningless."
   },
   {
     "Name":  ["Acceptance Rate"],
     "Type": "std::vector<double>",
     "Description": "Measured acceptance rate, for each latent variable dimension separately. HSAEM will try to make this become close to the target acceptance rate."
   },
   {
     "Name":  ["Acceptance Rate Nominator"],
     "Type": "std::vector<double>",
     "Description": "Used to calculate the acceptance rate. THey could instead be integer vectors to save space."
   },
   {
     "Name":  ["Acceptance Rate Denominator"],
     "Type": "std::vector<double>",
     "Description": "Used to calculate the acceptance rate. They could instead be integer vectors to save space."
   },
   {
     "Name":  ["MCMC Variances"],
     "Type": "std::vector<double>",
     "Description": "Contains the standard deviations used in the proposal distributions of MCMC, for each latent variable dimension individually."
   },
   {
    "Name": [ "N1" ],
    "Type": "size_t",
    "Description": "For convenience. Number sampling sub-steps using proposal distribution 1. Important: If you use a relatively large number of logit-normal variables, set N1 to zero or keep it very small. Best set it to zero. The first distribution is very unreliable for logit-normal variables which can lead to acceptance of very bad samples."
   },
   {
    "Name": [ "N2" ],
    "Type": "size_t",
    "Description": "For convenience. Number sampling sub-steps using proposal distribution 2."
   },
   {
    "Name": [ "N3" ],
    "Type": "size_t",
    "Description": "For convenience. Number sampling sub-steps using proposal distribution 3."
   },
   {
    "Name": [ "Samples Per Chain" ],
    "Type": "size_t",
    "Description": "For convenience. Total number of samples per chain."
   },
   {
    "Name": [ "Delta" ],
    "Type": "double",
    "Description": "The variance adjustment rate in MCMC. Must be between 0 and 1. The variances are adjusted to achieve the target acceptance rate."
   },
   {
    "Name": [ "Fischer Information Matrix" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Result of the optimization: The estimated Fischer Information Matrix (FIM)"
   }
 ],
 
 "Module Defaults":
 {
   "Delta": 0.4,
   "Hyperparameters Diagonal Covariance": [],
   "Hyperparameters Covariance": [],

   "Number Chains": 10,
   "MCMC Outer Steps": 500,
   "MCMC Subchain Steps": [2, 2, 2],
   "MCMC Target Acceptance Rate": 0.3,

   "Termination Criteria":
   {
     "Max Generations": 1
   },

   "Uniform Generator":
    {
     "Type": "Univariate/Uniform",
     "Minimum": 0.0,
     "Maximum": 1.0
    },
   "Univariate Normal Generator":
    {
     "Type": "Univariate/Normal",
     "Mean": 0.0,
     "Standard Deviation": 1.0
    },
   "Multivariate Normal Generator":
    {
     "Type": "Multivariate/Normal",
     "Mean Vector": [-1.0],
     "Sigma": [-1.0]
    }
 },
 
 "Variable Defaults":
 {
 }
}
