{
 "Configuration Settings":
 [
   {
    "Name": [ "Number Samples Per Step" ],
    "Default": "5",
    "Type": "size_t",
    "Description": "The number of latent-variable samples to use in each E-M iteration. HSAEM will create one MCMC chain per sample. More samples may result in a more precise estimate of Q in each iteration - but Q is a Robbinsâ€“Monro 'running average', so there should not be a need for a very large number of samples."
   },

   {
    "Name": [ "Alpha 1" ],
     "Default": "0.6",
    "Type": "double",
    "Description": "The 'decay rate' gamma_k (used in Robbins-Monro averaging) is calculated as 1/(k^alpha). You can set two different alphas, one for the initial phase, one for the later phase. This alpha is for the initial phase."
   },
   {
    "Name": [ "Alpha 2" ],
     "Default": "0.9",
    "Type": "double",
    "Description": "The 'decay rate' gamma_k (used in Robbins-Monro averaging) is calculated as 1/(k^alpha). You can set two different alphas, one for the initial phase, one for the later phase. This alpha is for the later phase. The later-phase alpha should lie in (0.5, 1] to guarantee convergence."
   },
   {
    "Name": [ "Number Initial Steps" ],
     "Default": "100",
    "Type": "size_t",
    "Description": "After this number of initial steps, the decay rate switches from being defined by Alpha 1 to being defined by Alpha 2."
   },
   {
    "Name": [ "K1" ],
     "Default": "1",
    "Type": "size_t",
    "Description": "A second type of 'number of initial steps': hSAEM will use completely stochastic updates during the first K1 generations. That is, no Robbins-Monro averaging during these generations."
   },
   {
    "Name": [ "Use Simulated Annealing" ],
     "Default": true,
    "Type": "bool",
    "Description": "If true, 'expand' the sampling distribution by a decaying factor, so that a wider range is sampled in the beginning."
   },
   {
    "Name": [ "Simulated Annealing Decay Factor" ],
     "Default": "0.9",
    "Type": "double",
    "Description": "If simulated annealing is enabled, reduce the 'temperature' by this much at each step."
   },
   {
    "Name": [ "Simulated Annealing Initial Variance" ],
     "Default": "1.0",
    "Type": "double",
    "Description": "If simulated annealing is enabled, start from this variance (unless it is smaller than the currently estimated covariance) for sampling. It will be reduced by a factor 'Simulated Annealing Decay Factor' each generation."
   },
   {
    "Name": [ "mcmc Outer Steps" ],
     "Default": "100",
    "Type": "size_t",
    "Description": "For this many iterations, repeat Ni, i in {1,2,3}, sampling sub-steps for each of 3 proposal distributions."
   },
   {
    "Name": [ "N1" ],
     "Default": "10",
    "Type": "size_t",
    "Description": "Number sampling sub-steps using proposal distribution 1. Could make this an internal parameter instead."
   },
   {
    "Name": [ "N2" ],
     "Default": "10",
    "Type": "size_t",
    "Description": "Number sampling sub-steps using proposal distribution 2. Could make this an internal parameter instead."
   },
   {
    "Name": [ "N3" ],
     "Default": "10",
    "Type": "size_t",
    "Description": "Number sampling sub-steps using proposal distribution 3. Could make this an internal parameter instead."
   },
   {
    "Name": [ "Delta" ],
     "Default": "0.4",
    "Type": "double",
    "Description": "The variance adjustment rate in MCMC. Must be between 0 and 1. The variances are adjusted to achieve the target acceptance rate. Will make this an internal parameter later."
   },
   {
    "Name": [ "mcmc Target Acceptance Rate" ],
     "Default": "0.3",
    "Type": "double",
    "Description": "MCMC Target Acceptance Rate. Might make this an internal parameter later."
   },
   {
    "Name": [ "Log All Samples" ],
     "Default": "true",
    "Type": "bool",
    "Description": "If true, store all samples at intermediate sampling steps, not just per generation. This allows to see whether the sampling parameters are chosen well, but might use a lot of memory."
   }
 ],

 "Termination Criteria":
 [
 ],

 "Variables Configuration":
 [
 ],

 "Internal Settings":
 [
   {
    "Name": [ "Current Hyperparameters Mean" ],
    "Type": "std::vector<double>",
    "Default": "std::vector<double>(0)",
    "Description": "Current values of the 'mean' that is part of the hyperparameters"
   },
   {
    "Name": [ "Current Hyperparameters Covariance" ],
    "Type": "std::vector<std::vector<double>>",
    "Default": "std::vector<std::vector<double>>(0)",
    "Description": "Current values of the covariance matrix that is part of the hyperparameters. An NxN matrix encoded as vector of vectors."
   },
   {
     "Name": [ "Current Samples" ],
     "Type": "std::vector<std::vector<std::vector<double>>>",
     "Description": "Sampled values of the latent variables in the current iteration. A vector of 'Number Samples Per Step' vectors with values for all latent variables. (Outer vector iterates over samples, inner vector over different latent variables.)"
   },
   {
     "Name": [ "All Samples This Iteration" ],
     "Type": "std::vector<std::vector<std::vector<std::vector<double>>>>",
     "Description": "A vector of all 'Current Samples' across one generation."
   },
   {
     "Name": [ "All Loglikelihoods This Iteration" ],
     "Type": "std::vector<std::vector<std::vector<double>>>",
     "Description": "A vector of all log-likelihoods across one generation."
   },
   {
     "Name": [ "All Priors This Iteration" ],
     "Type": "std::vector<std::vector<std::vector<double>>>",
     "Description": "A vector of all log-priors across one generation."
   },
   {
     "Name": [ "Current Z" ],
     "Type": "std::vector<std::vector<std::vector<double>>>",
     "Description": "Sampled values of the **transformed** latent variables in the current iteration. Crucial difference to 'Current Samples': This stores one such array per MCMC chain, so it has one dimension more. One value per latent variable and individual."
   },
   {
     "Name": [ "Current Sample Standard Deviations" ],
     "Type": "std::vector<std::vector<double>>",
     "Description": "Standard deviations of sampled values of the latent variables in the current iteration. Standard deviation is per latent variable and individual."
   },
   {
     "Name": [ "Current Sample Means" ],
     "Type": "std::vector<std::vector<double>>",
     "Description": "Means of sampled values of the latent variables in the current iteration. Separately for each individual."
   },
   {
     "Name": [ "Current Mean Log Probability" ],
     "Type": "double",
     "Description": "Mean of current total log-probability, across all chains/samples."
   },
   {
     "Name": [ "Current S 1" ],
     "Type": "std::vector<double>",
     "Description": "Robbins-Monro average of S1, = vector of sums of sampled transformed latent variables. Updated at every step."
   },
   {
     "Name": [ "Current S 2" ],
     "Type": "std::vector<std::vector<double>>",
     "Description": "Robbins-Monro average of S2, = sum of z_i * z_i^T, for each sample of transformed latent variables z_i. Updated at every step."
   },
   {
     "Name": [ "Best Log Likelihood" ],
     "Type": "double",
     "Description": "Stores the highest Log Likelihood for any (current S, hyperparameters) pair so far (after the M step)"
   },
   {
     "Name": [ "Current Log Likelihood" ],
     "Type": "double",
     "Description": "Stores the Log Likelihood for the latest (current S, hyperparameters) pair after the M step"
   },
   {
     "Name": [ "Current Sample Log Likelihoods" ],
     "Type": "std::vector<std::vector<double>>",
     "Description": "Dimensions: nChains x nIndividuals. Stores the individual Log Likelihoods, for each current sample (one sample per chain)."
   },
   {
     "Name": [ "Current Sample Log Priors" ],
     "Type": "std::vector<std::vector<double>>",
     "Description": "Dimensions: nChains x nIndividuals. Stores the individual Log Priors, for each current sample (one sample per chain)."
   },
   {
     "Name": ["Latent Space Dimensions"],
     "Type": "size_t",
     "Description": "Same parameter as the one of HierarchicalLatent, copied for convenience. The dimension of the normal distribution that makes up p(latent | hyperparameters).  Equal to [Latent To Hyperparameter Mapping].size(). Can be seen as the dimension of the latent variables. (Is not equal to the number of latent variables.)"
   },
   {
    "Name": [ "Gamma" ],
    "Type": "double",
    "Description": "The 'decay rate' gamma_k (used in Robbins-Monro averaging) for this generation. It is calculated from one of the two alpha parameters; the first in earlier generations, the second later on."
   },

   {
     "Name": [ "Relative Change Threshold For Monitoring" ],
     "Type": "double",
     "Description": "A threshold for the quantities 'change / previous value'."
   },
   {
     "Name": [ "Number Generations Small Sample Change" ],
     "Type": "size_t",
     "Description": "Unused. How often the sample means and standard deviations did not change much, in consecutive generations."
   },
   {
     "Name": [ "Number Generations Small Hyperparameter Change" ],
     "Type": "size_t",
     "Description": "Unused. How often the hyperparamters did not change much, in consecutive generations."
   },
   {
     "Name": [ "Number Generations Small Likelihood Change" ],
     "Type": "size_t",
     "Description": "How often the hyperparamters did not change much, in consecutive generations."
   },
   {
     "Name":  ["Acceptance Rate"],
     "Type": "std::vector<double>",
     "Description": "Measured acceptance rate, for each latent variable dimension separately. HSAEM will try to make this become close to the target acceptance rate."
   },
   {
     "Name":  ["Acceptance Rate Nominator"],
     "Type": "std::vector<double>",
     "Description": "Used to calculate the acceptance rate. THey could instead be integer vectors to save space."
   },
   {
     "Name":  ["Acceptance Rate Denominator"],
     "Type": "std::vector<double>",
     "Description": "Used to calculate the acceptance rate. They could instead be integer vectors to save space."
   },
   {
     "Name":  ["mcmc Standard Deviations"],
     "Type": "std::vector<double>",
     "Description": "Contains the standard deviations used in the proposal distributions of MCMC, for each latent variable dimension individually."
   },
   {
    "Name": [ "Uniform Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Uniform random number generator."
   },
   {
    "Name": [ "Univariate Normal Generator" ],
    "Type": "korali::distribution::univariate::Normal*",
    "Description": "Normal random number generator."
   },
   {
    "Name": [ "Annealed Normal Generator" ],
    "Type": "korali::distribution::multivariate::Normal*",
    "Description": "Multivariate normal random number generator; its covariance will be scaled at early iteration (simulated annealing)."
   },
   {
    "Name": [ "Annealed Covariance" ],
    "Type": "std::vector<double>",
    "Description": "A vector of length 'Latent Space Dimension' x 'Latent Space Dimension', containing a partially modified (scaled-up diagonal entries) version of the covariance matrix."
   },
   {
    "Name": [ "mcmc Number Chains" ],
    "Type": "size_t",
    "Description": "How many chains of MCMC sampling to run in parallel. Equal to what the user defines as number of samples per step."
   },
   {
    "Name": [ "Number Individuals" ],
    "Type": "size_t",
     "Description": "For convenience; the same as the parameter of same name of the hierarchical latent problem. How many different latent variable vectors are there. Each latent variable vector is treated as belonging to one 'individual'. All those vectors are assumed to be drawn from the same distribution."
  }
 ],


 "Module Defaults":
 {
   "Number Samples Per Step" : 5,
   "Alpha 1" : 0.6,
   "Alpha 2" : 0.9,
   "Number Initial Steps": 100,
   "Use Simulated Annealing": false,
   "Simulated Annealing Decay Factor": 0.9,
   "Simulated Annealing Initial Variance": 1.0,
   "Relative Change Threshold For Monitoring": 0.01,
   "Number Generations Small Likelihood Change": 0,
   "mcmc Outer Steps": 10,
   "mcmc Target Acceptance Rate": 0.3,
   "N1": 10,
   "N2": 10,
   "N3": 10,
   "Delta": 0.4,
   "K1": 1,
   "Log All Samples": true,

   "Uniform Generator":
    {
     "Type": "Univariate/Uniform",
     "Minimum": 0.0,
     "Maximum": 1.0
    },
   "Annealed Normal Generator":
    {
     "Type": "Multivariate/Normal",
     "Mean Vector": [-1.0],
     "Sigma": [-1.0]
    },
   "Univariate Normal Generator":
    {
     "Type": "Univariate/Normal",
     "Mean": 0.0,
     "Standard Deviation": 1.0
    }

 },
  "Variable Defaults": {
  }

}
