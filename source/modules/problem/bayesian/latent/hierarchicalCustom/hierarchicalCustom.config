{

 "Configuration Settings":
 [
   {
    "Name": [ "Log Likelihood Functions" ],
    "Type": "std::vector<std::function<void(korali::Sample&)>>",
     "Description": "A list of functions, each calculating the loglikelihood for one individual. Each function should access sample['Latent Variables'] (a list containing a single value for each of the latent space dimensions), and from it calculate the conditional log likelihood, given the latent variables. A single loglikelihood must be returned in sample['LogLikelihood Evaluation']. Underlying likelihood functions do not need to integrate to 1 (but should be normalizable, i.e. have finite integral)."
  },
   {
    "Name": [ "Initial Variance" ],
    "Type": "double",
     "Description": "With what values on the diagonal the covariance matrix* will be initialized (* part of the hyperparameters, together with the mean variables defines the transformed-normal distribution p(latent | hyperparameters))  ."
  }
 ],

 "Compatible Solvers": [ "HSAEM", "Executor2" ],
 
 "Results":
 [
 ],
 
  "Available Operations":
 [
  {
   "Name": "Evaluate logPrior",
   "Function": "evaluateLogPrior",
   "Description": "Evaluates the logPrior of the sample.",
   "Results": [ { "Name": "Log Prior", "Description":  "Contains a vector of numbers, each with the log prior evaluation of one individual." } ]
  },
  {
   "Name": "Evaluate logLikelihood",
   "Function": "evaluateLoglikelihood",
   "Description": "Evaluates the loglikelihood of the sample.",
   "Results": [ { "Name": "logLikelihood", "Description": "Contains a vector of numbers, each the log likelihood evaluation of data for one individual." } ]
  },
  {
   "Name": "Evaluate logPosterior",
   "Function": "evaluateLogPosterior",
   "Description": "Evaluates the loglikelihood of the sample.",
   "Results": [ { "Name": "Log Posterior", "Description": "Contains a single number with the log posterior evaluation of the sample." } ]
  }
 ],
 
 "Variables Configuration":
 [
   {
    "Name": [ "Latent Variable Distribution Type" ],
    "Type": "std::string",
    "Options": [
                { "Value": "NA", "Description": "For hyperparameters, we do not need any assumptions about their distribution." },
                { "Value": "Normal", "Description": "Assume this latent variable is distributed normally." },
                { "Value": "Log-Normal", "Description": "Assume the log of this latent variable is distributed normally." },
                { "Value": "Logit-Normal", "Description": "Assume the logit (log(t/(1-t))) of this latent variable is distributed normally." }
               ],
    "Description": "For latent variables. We use a restricted hierarchical model, where latent variables can follow either a normal, a log-normal or a logit-normal distribution. Hyperparameters will be determined automatically as mean and covariance of the underlying normally distributed variables."
   },
   {
    "Name": [ "Initial Value" ],
    "Type": "double",
    "Description": "Defines the initial value from which a solver can start looking for the optimum. Implementation note: This is required to set up the sub-problem - these variables need to already be set from the problem side to be able to copy them over to the sub-problem."
   }
 ],

   "Internal Settings":
 [
  {
    "Name": [ "Number Individuals" ],
    "Type": "size_t",
     "Description": "How many different latent variable vectors are there. Each latent variable vector is treated as belonging to one 'individual'. All those vectors are assumed to be drawn from the same distribution."
  },
   {
    "Name": [ "Latent Space Dimensions" ],
    "Type": "size_t",
     "Description": "Number of coordinates of one latent variable vector. The dimension of the normal distribution that makes up p(latent | hyperparameters)."
  }
 ],
 
 "Module Defaults":
 {
   "Initial Variance": 1.0
 },
 
 "Variable Defaults":
 {
  "Bayesian Type": "Latent"
 }
}
