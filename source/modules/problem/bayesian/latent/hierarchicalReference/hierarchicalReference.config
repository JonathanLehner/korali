{

 "Configuration Settings":
 [
   {
    "Name": [ "Computational Models" ],
    "Type": "std::vector<std::function<void(korali::Sample&)>>",
     "Description": "List of computational models, one for each individual. Each function should access sample['Latent Variables'] (a vector, one value for each of the latent space dimensions) and optionally sample['Data Points'] (a list of lists, one point X per reference evaluation for this individual). Each function should evaluate the computational model, one evaluation per reference value. That is, it calculates multiple values y = f(x, theta). Second, it also should calculate a noise parameter, sigma = g(x, theta). The values [y1, y2, ...] must be returned in sample['Reference Evaluations'], and the noise parameters for Normal likelihood models is returned as sample['Standard Deviations'], while the one for negative binomial likelihood is sample['Dispersions']."
  },
  {
    "Name": [ "Likelihood Model" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Normal", "Description": "The user specifies the mean and the standard deviation of the normal likelihood." },
                { "Value": "Negative Binomial", "Description": "The user specifies the mean and the dispersion parameter of the Negative Binomial distribution." },
                { "Value": "Positive Normal", "Description": "The user specifies the mean and the standard deviations of the truncated normal on [0,infty]" }
               ],
    "Description": "Specifies the likelihood model to approximate the reference data to."
  },
   {
    "Name": [ "Points" ],
    "Type": "std::vector<std::vector<std::vector<double>>>",
     "Description": "Optional. Vector of vectors of data 'points'. One vector per individual, containing one or more data points. Data points are also represented as vectors and must have the same length. Can be omitted if there are no x values and only y values."
  },
   {
    "Name": [ "Reference Data" ],
    "Type": "std::vector<std::vector<double>>",
     "Description": "One vector per individual, containing one or more y-values, or reference measurements. If 'Data Points' is given, must contain one reference value for each data point. "
  },
   {
    "Name": [ "Initial Variance" ],
    "Type": "double",
     "Description": "With what values on the diagonal the covariance matrix* will be initialized (* part of the hyperparameters, together with the mean variables defines the transformed-normal distribution p(latent | hyperparameters))  ."
  }
 ],

 "Compatible Solvers": [ "HSAEM", "Executor2" ],
 
 "Results":
 [
 ],
 
  "Available Operations":
 [
  {
   "Name": "Evaluate logPrior",
   "Function": "evaluateLogPrior",
   "Description": "Evaluates the logPrior of the sample.",
   "Results": [ { "Name": "Log Prior", "Description":  "Contains a vector of numbers, each with the log prior evaluation of one individual." } ]
  },
  {
   "Name": "Evaluate logLikelihood",
   "Function": "evaluateLoglikelihood",
   "Description": "Evaluates the loglikelihood of the sample.",
   "Results": [ { "Name": "logLikelihood", "Description": "Contains a vector of numbers, each the log likelihood evaluation of data for one individual." } ]
  },
  {
   "Name": "Evaluate logPosterior",
   "Function": "evaluateLogPosterior",
   "Description": "Evaluates the loglikelihood of the sample.",
   "Results": [ { "Name": "Log Posterior", "Description": "Contains a single number with the log posterior evaluation of the sample." } ]
  }
 ],
 
 "Variables Configuration":
 [
   {
    "Name": [ "Latent Variable Distribution Type" ],
    "Type": "std::string",
    "Options": [
                { "Value": "NA", "Description": "For hyperparameters, we do not need any assumptions about their distribution." },
                { "Value": "Normal", "Description": "Assume this latent variable is distributed normally." },
                { "Value": "Log-Normal", "Description": "Assume the log of this latent variable is distributed normally." },
                { "Value": "Logit-Normal", "Description": "Assume the logit (log(t/(1-t))) of this latent variable is distributed normally." }
               ],
    "Description": "For latent variables. We use a restricted hierarchical model, where latent variables can follow either a normal, a log-normal or a logit-normal distribution. Hyperparameters will be determined automatically as mean and covariance of the underlying normally distributed variables."
   },
   {
    "Name": [ "Initial Value" ],
    "Type": "double",
    "Description": "Defines the initial value from which a solver can start looking for the optimum. Implementation note: This is required to set up the sub-problem - these variables need to already be set from the problem side to be able to copy them over to the sub-problem."
   }
 ],

   "Internal Settings":
 [
   {
    "Name": [ "Number Individuals" ],
    "Type": "size_t",
     "Description": "How many different latent variable vectors are there. Each latent variable vector is treated as belonging to one 'individual'. All those vectors are assumed to be drawn from the same distribution."
  },
   {
    "Name": [ "Latent Space Dimensions" ],
    "Type": "size_t",
     "Description": "Number of coordinates of one latent variable vector. The dimension of the normal distribution that makes up p(latent | hyperparameters)."
  },
  {
    "Name": [ "Handle X Values" ],
    "Type": "bool",
     "Description": "How many different latent variable vectors are there. Each latent variable vector is treated as belonging to one 'individual'. All those vectors are assumed to be drawn from the same distribution."
  },
  {
    "Name": [ "X Dimensions" ],
    "Type": "size_t",
     "Description": "If x-value data is passed, stores the size of each such data point (excluding y values)."
  }
 ],
 
 "Module Defaults":
 {
   "Initial Variance": 1.0,
   "Points": [],
   "X Dimensions": 0,
   "Handle X Values" : false
 },
 
 "Variable Defaults":
 {
  "Bayesian Type": "Latent"
 }
}
