{

 "Configuration Settings":
 [
   {
    "Name": [ "Log Likelihood Function" ],
    "Type": "std::function<void(korali::Sample&)>",
     "Description": "This function should access sample['Latent Variables'] (containing a vector of vectors, one latent variable vector for each individual). A list of log-likelihoods, one per individual, is expectedo to be returned in sample['logLikelihood']. The underlying llh-functions do not need to integrate to 1."
  },
   {
     "Name": ["Latent Space Dimensions"],
     "Type": "size_t",
     "Description": "The dimension of the normal distribution that makes up p(latent | hyperparameters).  Equal to [Latent To Hyperparameter Mapping].size(). Can be seen as the dimension of the latent variables. (Is not equal to the number of latent variables.)"
   },
   {
     "Name": ["Number Individuals"],
     "Type": "size_t",
     "Description": "The number of individuals"
   },
   {
    "Name": [ "Diagonal Covariance" ],
     "Default": "false",
    "Type": "bool",
    "Description": "If true, the covariance matrix of the prior will have only zeros off-diagonal."
   }
 ],

 "Compatible Solvers": [ "HSAEM", "Executor2", "latentVariableFIM" ],
 
 "Results":
 [
 ],
 
  "Available Operations":
 [
  {
   "Name": "Evaluate logPrior",
   "Function": "evaluateLogPrior",
   "Description": "Evaluates the logPrior of the sample.",
   "Results": [ { "Name": "Log Prior", "Description": "Contains a single number with the log prior evaluation of the sample." } ]
  },
  {
   "Name": "Evaluate logLikelihood",
   "Function": "evaluateLoglikelihood",
   "Description": "Evaluates the loglikelihood of the sample.",
   "Results": [ { "Name": "logLikelihood", "Description": "Contains a single number with the log likelihood evaluation of the sample." } ]
  },
  {
   "Name": "Evaluate logPosterior",
   "Function": "evaluateLogPosterior",
   "Description": "Evaluates the loglikelihood of the sample.",
   "Results": [ { "Name": "Log Posterior", "Description": "Contains a single number with the log posterior evaluation of the sample." } ]
  }
 ],
 
 "Variables Configuration":
 [
   {
    "Name": [ "Latent Variable Distribution Type" ],
    "Type": "std::string",
    "Options": [
                { "Value": "NA", "Description": "For hyperparameters, we do not need any assumptions about their distribution." },
                { "Value": "Normal", "Description": "Assume this latent variable is distributed normally." },
                { "Value": "Log-Normal", "Description": "Assume the log of this latent variable is distributed normally." },
                { "Value": "Logit-Normal", "Description": "Assume the logit (log(t/(1-t))) of this latent variable is distributed normally." }
               ],
    "Description": "For latent variables. We use a restricted hierarchical model, where latent variables can follow either a normal, a log-normal or a logit-normal distribution. Hyperparameters will be determined automatically as mean and covariance of the underlying normally distributed variables."
   },
   {
    "Name": [ "Latent Space Coordinate" ],
    "Type": "int",
    "Description": "This is used to assing the same hyperparameters (mean of the transformed, normal variable) to multiple variables. I.e., it is assumed that all latent variables with same distribution index were drawn from the same distribution."
   },
   {
    "Name": [ "Individual Index" ],
    "Type": "int",
    "Description": "(Transformed) latent variables are assumed to be multiple vectors, z_i, each drawn from the same distribution. That is, each latent variable (z_i)_j belongs to one 'individual' index i, and one coordinate of z_i, the distribution index j."
   },
   {
    "Name": [ "Is Mean" ],
    "Type": "bool",
    "Description": "Only for hyperparameters. Indicator for those variables representing a coordinate from the mean vector."
   },
   {
    "Name": [ "Covariance I" ],
    "Type": "size_t",
    "Description": "Only for covariance-matrix hyperparameters. The i in cov[i, j] that this variable represents."
   },
   {
    "Name": [ "Covariance J" ],
    "Type": "size_t",
    "Description": "Only for covariance-matrix hyperparameters. The j in cov[i, j] that this variable represents."
   },
   {
    "Name": [ "Initial Value" ],
    "Type": "double",
    "Description": "Defines the initial value from which a solver can start looking for the optimum. Required for simplicity, since the 'HierarchicalLatent' problem per default creates a hierarchicalLowlevel problem with such initial values. To prevent erros, this must be valid, regardless of the solver, although not every solver might require initial values."
   }
 ],

   "Internal Settings":
 [
   {
     "Name": ["Hyperparameters Mean"],
     "Type": "std::vector<korali::Variable*>",
     "Description": "Auxiliary vector with references to variables in the main _variables list. Hyperparameters representing the means (mean of all normal distributions of the transformed latent variables)"
   },
   {
     "Name": ["Hyperparameters Covariance"],
     "Type": "std::vector<korali::Variable*>",
     "Description": "Auxiliary vector with references to variables in the main _variables list. Hyperparameters representing the covariance (of the joint normal distribution of the transformed latent variables)"
   },
   {
     "Name": ["Latent Variable Distributions"],
     "Type": "std::map<size_t, std::string>",
     "Description": "Will map each user-set 'Distribution Index' to its 'Distribution Type', and the name of one of its variables (for better overview, which one is which). Each 'Distribution Index' corresponds to one 'mean' hyperparameter, i.e. the dimension of the normal distribution that defines the distribution of the latent variables, p(latent | hyperparameters)."
   },
   {
     "Name": ["First Individual Latent Indices"],
     "Type": "std::map<size_t, size_t>",
     "Description": "Maps each coordinate to the index of the latent variable of individual 0 that represents this coordinate."
   },
   {
     "Name": ["Latent Index"],
     "Type": "std::vector<std::vector<size_t>>",
     "Description": "A matrix containing the latent variable indices, so that at mat[i,j] you find the index of the j-th coordinate of latent variable z_i. That is, i is the individual-index, j the distribution index."
   },
   {
     "Name": ["Normal Latent Indices"],
     "Type": "std::vector<size_t>",
     "Description": "Indices to find the normally distributed latent variables among all variables"
   },
   {
     "Name": ["Lognormal Latent Indices"],
     "Type": "std::vector<size_t>",
     "Description": "Indices to find the log-normally distributed latent variables among all variables (whose log is normally distributed)"
   },
   {
     "Name": ["Logitnormal Latent Indices"],
     "Type": "std::vector<size_t>",
     "Description": "Indices to find the logit-normally distributed latent variables among all variables (whose logit, i.e. p/(1-p) is normally distributed"
   },
   {
    "Name": [ "Multivariate Normal Distribution" ],
    "Type": "korali::distribution::multivariate::Normal*",
    "Description": "Multivariate normal distribution (/generator) for calculating the prior."
   }
 ],
 
 "Module Defaults":
 {
   "Multivariate Normal Distribution":
    {
     "Type": "Multivariate/Normal",
     "Mean Vector": [-1.0],
     "Sigma": [-1.0]
    },
   "Diagonal Covariance": false
 },
 
 "Variable Defaults":
 {
  "Bayesian Type": "Latent",
   "Individual Index" : 0,
   "Latent Space Coordinate": 0,
   "Is Mean": false,
   "Covariance I": -1,
   "Covariance J": -1

 }
}
